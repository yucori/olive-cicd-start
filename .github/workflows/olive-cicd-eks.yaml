name: istory ci/cd dev pipeline

permissions:
  contents: read
  security-events: write  # CodeQL 결과를 업로드하기 위한 권한
  actions: read

on:
  push:
    branches: [ "develop"]
  pull_request:
    branches: [ "develop"]
jobs:
  verify_pipeline:
    environment: runner
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          # root 계정 비밀번호
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          # 사용자 계정
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          # 사용자 계정 비밀번호
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          # 사용자 계정 데이터베이스
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: 소스코드 다운로드
      uses: actions/checkout@v4 

    - name: JDK 17 설치
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: change application.yml
      run: |
        cat > src/main/resources/application.yml << EOF
        spring:
          datasource:
            url: ${{ secrets.DATABASE_URL }} # 예dbc:mysql://localhost:3306/istory
            username: ${{ secrets.MYSQL_USER }}
            password: ${{ secrets.MYSQL_PASSWORD }}
            driver-class-name: com.mysql.cj.jdbc.Driver
          jpa:
            database-platform: org.hibernate.dialect.MySQL8Dialect
            hibernate:
              ddl-auto: update
            show-sql: true
          application:
            name: USER-SERVICE
          jwt:
            issuer: user@gmail.com
            secret_key: study-springboot
        management:
          endpoints:
            web:
              exposure:
                include: health,info
          endpoint:
            health:
              show-details: always
        EOF
    - name: 테스트 수행
      run: ./gradlew test

    - name: 테스트 검사 후 실패 시 파이프라인 중단
      if: failure()
      run: |
        echo "Tests failed! Pipeline will be stopped."
        exit 1

    - name: 테스트 결과를 STEP Summary 에 업로드
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: |                    # 여러 경로 지정
          **/build/reports/tests/test/
          **/build/test-results/test/
        retention-days: 30 

    - name: 기본 수행정보 Step Summary 에 표시
      run: |
        echo "## 워크플로우 실행 정보 요약" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "* 실행 담당자: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "* 실행 이벤트: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "* 실행 저장소: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "* 실행 브랜치: ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY